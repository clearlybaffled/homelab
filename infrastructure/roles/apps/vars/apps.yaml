# yaml-language-server: $schema=../../../../schemas/apps.schema.json
---
argocd:
  namespace: argocd
  wave: "0"
  path: ''
  kustomize:
    charts:
      - chart: argocd/argo-cd
        version: 8.0.0
        namespace: argocd
        release: argocd
        apiVersions: true
    extras:
      patches:
        - patch: |-
            - op: add
              path: /spec/template/spec/containers/0/env/-
              value: { name: ARGOCD_SYNC_WAVE_DELAY, value: '30' }
          target:
            version: v1
            group: apps
            kind: StatefulSet
            name: argocd-application-controller
            labelSelector: "app.kubernetes.io/name=argocd-application-controller"

node-feature-discovery:
  namespace: kube-system
  path:
  charts:
    - chart: nfd/node-feature-discovery
      version: 0.15.4

intel-device-plugin:
  namespace: kube-system
  path:
  charts:
    - chart: intel/intel-device-plugins-operator
      version: &intel-version 0.29.0
      valueFiles: []

    - chart: app-template
      release: intel-gpu-exporter
      valueFiles:
        - exporter.yaml
  kustomize:
    charts:
      - chart: intel/intel-device-plugins-gpu
        version: *intel-version
    extras:
      patches:
        - patch: |-
            - op: remove
              path: /spec/resourceManager
            - op: remove
              path: /metadata/annotations
          target:
            version: v1
            group: deviceplugin.intel.com
            kind: GpuDevicePlugin

local-path-provisioner:
  namespace: local-path-provisioner
  path: infrastructure

redis:
  namespace: db
  wave: "0"
  charts:
    - chart: bitnami/redis
      version: 18.19.2

kube-prometheus-stack:
  namespace: monitoring
  wave: "1"
  charts:
    - chart: prometheus-community/kube-prometheus-stack
      version: "{{ kube_prometheus_stack_chart_version }}"
      release: prometheus
      valueFiles:
        - operator.yaml
    - chart: prometheus-community/prometheus-adapter
      version: 4.14.1
      valueFiles:
        - adapter.yaml
  kustomize:
    resources:
      - "https://github.com/cert-manager/cert-manager/releases/download/{{ cert_manager_version }}/cert-manager.crds.yaml"
      - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagerconfigs.yaml"
      - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml"
      - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml"
      - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_probes.yaml"
      - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_prometheusagents.yaml"
      - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml"
      - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml"
      - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_scrapeconfigs.yaml"
      - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml"
      - "https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/{{ prometheus_operator_version }}/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml"
  localStorage:
    - name: grafana

cert-manager:
  path: infrastructure
  namespace: cert-manager
  wave: "1"
  charts:
    - chart: jetstack/cert-manager
      version: v1.17.2
  secrets:
    cloudflare-api-token:
  kustomize:
    resources:
      - ./cluster-issuer.yaml
      - ./issuer-letsencrypt-prod.yaml
      - ./issuer-letsencrypt-staging.yaml

ingress-nginx:
  namespace: infrastructure
  wave: "1"
  charts:
    - chart: ingress-nginx/ingress-nginx
      version: 4.12.2

traefik:
  namespace: traefik-system
  path: infrastructure
  wave: "1"
  charts:
    - chart: traefik/traefik
      version: 35.2.0

metallb:
  path: infrastructure
  namespace: metallb-system
  wave: "1"
  charts:
    - chart: metallb/metallb
      version: "{{ metallb_version }}"
  ignoreDifferences:
    - group: apiextensions.k8s.io
      kind: CustomResourceDefinition
      jsonPointers:
        - /spec/conversion/webhook/clientConfig/caBundle

external-dns:
  namespace: infrastructure
  wave: "1"
  charts:
    - chart: external-dns/external-dns
      version: 1.16.1
  secrets:
    secret:

cloudnative-pg:
  namespace: db
  wave: "3"
  charts:
    - chart: cnpg/cloudnative-pg
      version: 0.20.2
  kustomize:
    resources:
      - ./cluster.yaml
      - ./service.yaml
      - https://raw.githubusercontent.com/cloudnative-pg/cloudnative-pg/main/docs/src/samples/monitoring/prometheusrule.yaml
  secrets:
    superuser:
      type: basic-auth
      data:
        username: postgres
        password:
          name: admin
          type: password
    app-user:
      type: basic-auth
      data:
        username: app
        password:
          type: password

mysql:
  namespace: db
  wave: "3"
  pv: true
  charts:
    - chart: bitnami/mysql
      version: 9.14.3
  secrets:
    secret:
  localStorage:

reflector:
  enable: true
  namespace: infrastructure
  wave: "3"
  charts:
    - chart: emberstack/reflector
      version: 9.1.4
      valueFiles: []

reloader:
  namespace: infrastructure
  charts:
    - chart: stakater/reloader
      version: 2.1.3
  ignoreDifferences:
    - group: apps
      kind: Deployment
      name: reloader-reloader
      jqPathExpressions:
        - '.spec.template.spec.containers[].env[].valueFrom.resourceFieldRef.divisor'

keycloak:
  namespace: infrastructure
  kustomize:
    resources:
      - https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/{{ keycloak_version }}/kubernetes/keycloaks.k8s.keycloak.org-v1.yml
      - https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/{{ keycloak_version }}/kubernetes/keycloakrealmimports.k8s.keycloak.org-v1.yml
      - https://raw.githubusercontent.com/keycloak/keycloak-k8s-resources/{{ keycloak_version }}/kubernetes/kubernetes.yml
      - ./keycloak.yaml
      - ./ingress.yaml
  secrets:
    secret:
      data:
        username: keycloak
        password:
          type: password
          name: db

oauth2-proxy:
  namespace: infrastructure
  charts:
    - chart: oauth2-proxy/oauth2-proxy
      version: 7.12.13
  secrets:
    secret:

mosquitto:
  namespace: home
  charts:
    - chart: app-template
  kustomize:
    extras:
      configMapGenerator:
        - name: mosquitto-configmap
          files:
            - ./mosquitto.conf
          options:
            disableNameSuffixHash: true
  secrets:
    secret:
    frigate-secret:
      data:
        FRIGATE_MQTT_USERNAME: frigate
        FRIGATE_MQTT_PASSWORD:
          type: key
    home-assistant-secret:
      data:
        MOSQUITTO_HOME_ASSISTANT_USERNAME: home-assistant
        MOSQUITTO_HOME_ASSISTANT_PASSWORD:
          type: key
    owntracks-secret:
      data:
        OTR_USER: owntracks
        OTR_PASS:
          type: key
  ignoreDifferences:
    - group: apps
      kind: StatefulSet
      jsonPointers:
        - /spec/volumeClaimTemplates

homepage:
  namespace: homepage
  path: services
  charts:
    - chart: jameswynn/homepage
      version: 2.0.2
  secrets:
    secret:
    app-keys:
  kustomize:
    extras:
      configMapGenerator:
        - name: homepage-config
          files:
            - ./config/bookmarks.yaml
            - ./config/docker.yaml
            - ./config/kubernetes.yaml
            - ./config/services.yaml
            - ./config/settings.yaml
            - ./config/widgets.yaml
          options:
            disableNameSuffixHash: true
            labels:
              app.kubernetes.io/name: homepage
              app.kubernetes.io/instance: homepage


grocy:
  namespace: home
  wave: "4"
  kustomize:
    resources:
      - ./cm.yaml
      - ./deployment.yaml
      - ./ingress.yaml
      - ./svc.yaml
    extras:
      configMapGenerator:
        - name: grocy-config
          files:
          - ./config.php
          options:
            disableNameSuffixHash: true
            labels:
              app.kubernetes.io/name: grocy
              app.kubernetes.io/instance: grocy
  localStorage:

paperless-ngx:
  namespace: home
  wave: "4"
  pv: true
  charts:
    - chart: app-template
  kustomize:
    resources:
      - ./hp-scan-to-cm.yaml
  secrets:
    secret:
      data:
        PAPERLESS_DBUSER: paperless
        PAPERLESS_DBPASS:
          type: password
          name: db
        PAPERLESS_ADMIN_USER: admin
        PAPERLESS_ADMIN_PASSWORD:
          type: password
          name: admin
  localStorage:
    - name: paperless-library
      path: /share/Files/PaperlessNGX

mealie:
  namespace: home
  wave: "4"
  charts:
    - chart: app-template
  secrets:
    secret:
      data:
        POSTGRES_USER: mealie
        POSTGRES_PASSWORD:
          type: password
          name: db
  localStorage:
    - name: mealie-api-data

netbox:
  namespace: infrastructure
  charts:
    - chart: bootc/netbox
      version: 4.1.1
  kustomize:
    resources:
      - ./graphite/
  secrets:
    secret:
      data:
        db_user: netbox
        db_password:
          type: password
          name: db
        secret_key:
          type: key
          name: api
        superuser_password:
          type: password
          name: superuser
        superuser_api_token:
          type: key
          name: superuser_api
        ldap_bind_password: ''
        email_password: ''
        redis_tasks_password: ''
        redis_cache_password: ''
        napalm_password: ''
  localStorage:
    - name: netbox-media

linkding:
  namespace: services
  charts:
    - chart: app-template
  secrets:
    secret:
      data:
        LD_DB_USER: linkding
        LD_DB_PASSWORD:
          type: password
          name: db
        LD_SUPERUSER_NAME: admin
        LD_SUPERUSER_PASSWORD:
          type: password
          name: admin

linkace:
  namespace: services
  charts:
    - chart: app-template
  kustomize:
    extras:
      configMapGenerator:
        - name: nginx-config
          files:
            - nginx.conf
          options:
            disableNameSuffixHash: true
  secrets:
    secret:
      data:
        DB_USERNAME: linkace
        DB_PASSWORD:
          type: password
          name: db

linkwarden:
  namespace: services
  charts:
    - chart: app-template
  secrets:
    secret:
      data:
        DB_USER: linkwarden
        DB_PASS:
          type: password
          name: db
        NEXTAUTH_SECRET:
          type: password
          name: nextauth
    db_url:
  localStorage:

calibre:
  namespace: media
  charts:
    - chart: app-template
      release: calibre
  localStorage:
    - name: calibre-config

qbittorrent:
  namespace: downloads
  charts:
    - chart: app-template
  localStorage:
    - name: qbittorrent-config

sonarr:
  namespace: downloads
  charts:
    - chart: app-template
  secrets:
    secret:
      data:
        SONARR__API_KEY:
          type: password
          name: api
        SONARR__POSTGRES_USER: sonarr
        SONARR__POSTGRES_PASSWORD:
          type: password
          name: pgpass
        SONARR__POSTGRES_MAIN_DB: sonarr_main
        SONARR__POSTGRES_LOG_DB: sonarr_log
  localStorage:
    - name: sonarr-config

radarr:
  namespace: downloads
  charts:
    - chart: app-template
  secrets:
    secret:
      data:
        RADARR__API_KEY:
          type: password
          name: api
        RADARR__POSTGRES_USER: radarr
        RADARR__POSTGRES_PASSWORD:
          type: password
          name: pgpass
        RADARR__POSTGRES_MAIN_DB: radarr_main
        RADARR__POSTGRES_LOG_DB: radarr_log
  localStorage:
    - name: radarr-config

readarr:
  namespace: downloads
  charts:
    - chart: app-template
  secrets:
    secret:
      data:
        READARR__API_KEY:
          type: password
          name: api
        READARR__POSTGRES_USER: readarr
        READARR__POSTGRES_PASSWORD:
          type: password
          name: pgpass
        READARR__POSTGRES_MAIN_DB: readarr_main
        READARR__POSTGRES_LOG_DB: readarr_log
  localStorage:
    - name: readarr-config

prowlarr:
  namespace: downloads
  charts:
    - chart: app-template
  secrets:
    secret:
      data:
        PROWLARR__API_KEY:
          type: password
          name: api
        PROWLARR__POSTGRES_USER: prowlarr
        PROWLARR__POSTGRES_PASSWORD:
          type: password
          name: pgpass
        PROWLARR__POSTGRES_MAIN_DB: prowlarr_main
        PROWLARR__POSTGRES_LOG_DB: prowlarr_log
  localStorage:
    - name: prowlarr-config

lidarr:
  namespace: downloads
  charts:
    - chart: app-template
  secrets:
    secret:
      data:
        LIDARR__API_KEY:
          type: password
          name: api
        LIDARR__POSTGRES_MAIN_DB: lidarr_main
        LIDARR__POSTGRES_LOG_DB: lidarr_log
        LIDARR__POSTGRES_USER: lidarr
        LIDARR__POSTGRES_PASSWORD:
          type: password
          name: postgres
  localStorage:
    - name: lidarr-config

bazarr:
  namespace: downloads
  charts:
    - chart: app-template
  kustomize:
    extras:
      configMapGenerator:
        - name: bazarr-scripts
          files:
            - ./scripts/post-process.sh
      generatorOptions:
        disableNameSuffixHash: true
  localStorage:
    - name: bazarr-config
  secrets:
    secret:
      data:
        POSTGRES_DATABASE: bazarr
        POSTGRES_USERNAME: bazarr
        POSTGRES_PASSWORD:
          type: password
          name: postgres

audiobookshelf:
  namespace: media
  charts:
    - chart: app-template
  localStorage:
    - name: audiobookshelf-config

jellyfin:
  namespace: media
  charts:
    - chart: app-template
  ignoreDifferences:
    - group: apps
      kind: StatefulSet
      jsonPointers:
        - /spec/volumeClaimTemplates
  localStorage:
    - name: jellyseer-config

immich:
  namespace: media
  charts:
    - chart: immich/immich
      version: 0.7.0
  secrets:
    secret:
      data:
        DB_DATABASE_NAME: immich
        DB_USERNAME: immich
        DB_PASSWORD:
          type: password
          name: db
  localStorage:
    - name: immich-library

stirling-pdf:
  namespace: services
  charts:
    - chart: app-template

wger:
  namespace: services
  charts:
    - chart: wger/wger
      version: 0.2.0
  secrets:
    secret:
      data:
        DJANGO_DB_USER: wger
        DJANGO_DB_PASSWORD:
          type: password
          name: db
        SECRET_KEY:
          type: password
          name: secret
        SIGNING_KEY:
          type: password
          name: signing

home-assistant:
  namespace: home
  charts:
    - chart: app-template
  localStorage:

zwave-js-ui:
  namespace: home
  charts:
    - chart: app-template
  localStorage:
    - name: zwave-app-store

homebox:
  namespace: home
  charts:
    - chart: app-template
  localStorage:

kubeshark:
  namespace: infrastructure
  charts:
    - chart: kubeshark/kubeshark
      version: 52.1.9

nvr:
  namespace: home
  charts:
    - chart: blakeblackshear/frigate
      version: 7.5.1
      release: frigate
      valueFiles:
        - frigate.yaml
    - chart: app-template
      release: wyze-bridge
      valueFiles:
        - wyze-bridge.yaml

photoprism:
  namespace: media
  charts:
    - chart: app-template
  secrets:
    secret:
      data:
        PHOTOPRISM_ADMIN_PASSWORD:
          type: password
          name: admin
  localStorage:
    - name: photoprism
      path: /disks/sdg/photoprism

owntracks:
  namespace: home
  charts:
    - chart: app-template

wallabag:
  namespace: services
  charts:
    - chart: app-template
  secrets:
    secret:
      data:
        SYMFONY__ENV__DATABASE_USER: wallabag
        SYMFONY__ENV__DATABASE_PASSWORD:
          type: password

change-detection:
  namespace: services
  charts:
    - chart: app-template

navidrome:
  namespace: media
  charts:
    - chart: app-template
